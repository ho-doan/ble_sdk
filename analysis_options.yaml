include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # This list is derived from the list of all available lints located at
    # https://github.com/dart-lang/linter/blob/master/example/all.yaml
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_specify_types
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_classes_with_only_static_members
    - avoid_dynamic_calls
    - avoid_empty_else
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_field_initializers_in_const_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_print
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_setters_without_getters
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - cast_nullable_to_non_nullable
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - depend_on_referenced_packages
    - deprecated_consistency
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - eol_at_end_of_file
    - exhaustive_cases
    - hash_and_equals
    - implementation_imports
    - leading_newlines_in_multiline_strings
    - library_names
    - library_prefixes
    - list_remove_unrelated_type
    - no_adjacent_strings_in_list
    - no_default_cases
    - no_duplicate_case_values
    - no_logic_in_create_state
    - non_constant_identifier_names
    - noop_primitive_operations
    - null_check_on_nullable_type_parameter
    - null_closures
    - only_throw_errors # this does get disabled in a few places where we have legacy code that uses strings et al
    - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_relative_imports
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    - provide_deprecation_message
    - recursive_getters
    - sort_child_properties_last
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_init_formals
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_parenthesis
    - use_if_null_to_convert_nulls_to_bools
    - void_checks
analyzer:
  exclude:
    - lib/**.g.dart
    - lib/**.config.dart
    - lib/**.pb**.dart
  language:
      # strict-casts: true
      strict-inference: true
      # strict-raw-types: true
  errors:
    camel_case_types: warning
    avoid_dynamic_calls: warning
    camel_case_extensions: warning
    avoid_empty_else: error
    list_remove_unrelated_type: error
    prefer_void_to_null: error
    constant_identifier_names: warning
    prefer_final_locals: warning
    always_specify_types: ignore
    prefer_single_quotes: warning
    sort_constructors_first: warning
    always_declare_return_types: warning
    directives_ordering: warning
    prefer_relative_imports: warning
    unnecessary_import: warning
    must_be_immutable: warning
    no_logic_in_create_state: warning
    library_private_types_in_public_api: warning
    avoid_void_async: warning
    inference_failure_on_instance_creation: warning
    unused_import: warning
    unnecessary_overrides: warning
    depend_on_referenced_packages: warning
    only_throw_errors: warning
    implementation_imports: warning
    prefer_const_constructors: warning
    cancel_subscriptions: warning
    unused_shown_name: warning
    prefer_const_literals_to_create_immutables: warning
    must_call_super: warning
    prefer_const_constructors_in_immutables: warning
    invalid_use_of_protected_member: warning
    invalid_annotation_target: warning
    unused_element: warning
    avoid_unnecessary_containers: warning
    leading_newlines_in_multiline_strings: warning
    eol_at_end_of_file: warning
    use_if_null_to_convert_nulls_to_bools: warning
    avoid_single_cascade_in_expression_statements: warning
    sort_unnamed_constructors_first: warning
    unnecessary_await_in_return: warning
    avoid_redundant_argument_values: warning
    avoid_bool_literals_in_conditional_expressions: warning
    avoid_equals_and_hash_code_on_mutable_classes: warning
    avoid_setters_without_getters: ignore
    unnecessary_parenthesis: warning
    always_put_control_body_on_new_line: ignore
